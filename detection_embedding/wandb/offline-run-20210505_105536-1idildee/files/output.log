GPU available: False, used: False
TPU available: False, using: 0 TPU cores
/Users/emilecarron/opt/anaconda3/envs/thesis/lib/python3.6/site-packages/pytorch_lightning/utilities/distributed.py:68: UserWarning: you passed in a val_dataloader but have no validation_step. Skipping validation loop
  warnings.warn(*args, **kwargs)

  | Name             | Type             | Params
------------------------------------------------------
0 | anchor_generator | AnchorGenerator  | 0     
1 | backbone         | BackboneWithFPN  | 14.3 M
2 | head             | HeadJDE          | 31.7 M
3 | model            | RetinaNet        | 46.0 M
4 | bbone            | ResNet           | 11.7 M
5 | extractor        | Sequential       | 11.2 M
6 | teacher_model    | RecognitionModel | 11.3 M
7 | tm               | Sequential       | 11.2 M
------------------------------------------------------
69.0 M    Trainable params
0         Non-trainable params
69.0 M    Total params
275.909   Total estimated model params size (MB)
/Users/emilecarron/opt/anaconda3/envs/thesis/lib/python3.6/site-packages/pytorch_lightning/utilities/distributed.py:68: UserWarning: The dataloader, train dataloader, does not have many workers which may be a bottleneck. Consider increasing the value of the `num_workers` argument` (try 4 which is the number of cpus on this machine) in the `DataLoader` init to improve performance.
  warnings.warn(*args, **kwargs)
Training: 0it [00:00, ?it/s]Training:   0%|          | 0/34 [00:00<?, ?it/s]Epoch 0:   0%|          | 0/34 [00:00<?, ?it/s] /Users/emilecarron/dataset/SKU110K/images/train_0.jpg
/Users/emilecarron/dataset/SKU110K/images/train_1.jpg
> /Users/emilecarron/projects/thesis/detectie/retinanet.py(44)compute_loss()
-> 'classification': self.classification_head.compute_loss(targets, head_outputs, matched_idxs),
(Pdb) IndexError: The shape of the mask [201600] at index 0 does not match the shape of the indexed tensor [336000, 195] at index 0
> /Users/emilecarron/projects/thesis/detectie/retinanet.py(44)compute_loss()
-> 'classification': self.classification_head.compute_loss(targets, head_outputs, matched_idxs),
(Pdb) 