GPU available: False, used: False
TPU available: False, using: 0 TPU cores

  | Name             | Type             | Params
------------------------------------------------------
0 | anchor_generator | AnchorGenerator  | 0     
1 | backbone         | BackboneWithFPN  | 14.3 M
2 | model            | RetinaNet        | 23.2 M
3 | bbone            | ResNet           | 11.7 M
4 | extractor        | Sequential       | 11.2 M
5 | teacher_model    | RecognitionModel | 11.3 M
6 | tm               | Sequential       | 11.2 M
------------------------------------------------------
46.2 M    Trainable params
0         Non-trainable params
46.2 M    Total params
184.650   Total estimated model params size (MB)
/Users/emilecarron/opt/anaconda3/envs/thesis/lib/python3.6/site-packages/pytorch_lightning/utilities/distributed.py:68: UserWarning: The dataloader, val dataloader 0, does not have many workers which may be a bottleneck. Consider increasing the value of the `num_workers` argument` (try 4 which is the number of cpus on this machine) in the `DataLoader` init to improve performance.
  warnings.warn(*args, **kwargs)
Validation sanity check: 0it [00:00, ?it/s]Validation sanity check:   0%|          | 0/2 [00:00<?, ?it/s]/Users/emilecarron/dataset/SKU110K/images/val_169.jpg
Validation sanity check:  50%|█████     | 1/2 [00:12<00:12, 12.28s/it]/Users/emilecarron/dataset/SKU110K/images/val_33.jpg
Validation sanity check: 100%|██████████| 2/2 [00:24<00:00, 12.23s/it]/Users/emilecarron/dataset/SKU110K/images/val_280.jpg
                                                                      /Users/emilecarron/opt/anaconda3/envs/thesis/lib/python3.6/site-packages/pytorch_lightning/utilities/distributed.py:68: UserWarning: The dataloader, train dataloader, does not have many workers which may be a bottleneck. Consider increasing the value of the `num_workers` argument` (try 4 which is the number of cpus on this machine) in the `DataLoader` init to improve performance.
  warnings.warn(*args, **kwargs)
Training: 0it [00:00, ?it/s]Training:   0%|          | 0/534 [00:00<?, ?it/s]Epoch 0:   0%|          | 0/534 [00:00<?, ?it/s] /Users/emilecarron/dataset/SKU110K/images/train_0.jpg
/Users/emilecarron/dataset/SKU110K/images/train_1.jpg
> /Users/emilecarron/projects/thesis/detectie/retinanet.py(195)training_step()
-> x, y = batch
(Pdb) > /Users/emilecarron/projects/thesis/detectie/retinanet.py(196)training_step()
-> y = [{'boxes': b, 'labels': l, 'embedding': e}
(Pdb) > /Users/emilecarron/projects/thesis/detectie/retinanet.py(197)training_step()
-> for b, l, e in zip(y['boxes'],y['labels'], y['embedding'])
(Pdb) > /Users/emilecarron/projects/thesis/detectie/retinanet.py(200)training_step()
-> boxes = y[0]['boxes'].int()
(Pdb) > /Users/emilecarron/projects/thesis/detectie/retinanet.py(201)training_step()
-> counter = 0
(Pdb) > /Users/emilecarron/projects/thesis/detectie/retinanet.py(202)training_step()
-> for idx in boxes:
(Pdb) > /Users/emilecarron/projects/thesis/detectie/retinanet.py(203)training_step()
-> height = idx[3]-idx[1]
(Pdb) > /Users/emilecarron/projects/thesis/detectie/retinanet.py(204)training_step()
-> width = idx[2]-idx[0]
(Pdb) > /Users/emilecarron/projects/thesis/detectie/retinanet.py(205)training_step()
-> if height < 7:
(Pdb) > /Users/emilecarron/projects/thesis/detectie/retinanet.py(208)training_step()
-> if width < 7:
(Pdb) > /Users/emilecarron/projects/thesis/detectie/retinanet.py(212)training_step()
-> image = torchvision.transforms.functional.crop(x, idx[1], idx[0], height, width)
(Pdb) > /Users/emilecarron/projects/thesis/detectie/retinanet.py(213)training_step()
-> self.tm.eval()
(Pdb) > /Users/emilecarron/projects/thesis/detectie/retinanet.py(214)training_step()
-> predictions = self.tm(image)
(Pdb) > /Users/emilecarron/projects/thesis/detectie/retinanet.py(217)training_step()
-> _, predicted = torch.max(predictions.data, 1)
(Pdb) > /Users/emilecarron/projects/thesis/detectie/retinanet.py(218)training_step()
-> predictions = torch.squeeze(predictions)
(Pdb) > /Users/emilecarron/projects/thesis/detectie/retinanet.py(219)training_step()
-> y[0]['labels'][counter] = predicted
(Pdb) > /Users/emilecarron/projects/thesis/detectie/retinanet.py(222)training_step()
-> y[0]['embedding'][counter] = predictions
(Pdb) > /Users/emilecarron/projects/thesis/detectie/retinanet.py(202)training_step()
-> for idx in boxes:
(Pdb) tensor([0.0000e+00, 0.0000e+00, 1.6143e-01, 7.1908e-03, 1.8795e-01, 0.0000e+00,
        9.6095e-03, 8.3173e-01, 8.1282e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 1.0382e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.8185e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 3.3717e-01, 0.0000e+00, 4.3537e-01, 1.7001e-01,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 4.2794e-01, 1.5048e-01, 0.0000e+00,
        0.0000e+00, 2.4529e-01, 0.0000e+00, 0.0000e+00, 1.9259e+00, 0.0000e+00,
        2.8073e-01, 1.4062e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 4.6815e-01, 5.3152e-02, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.9372e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 7.1480e-02, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        1.9206e-02, 8.2956e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 8.9605e-01, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 2.6173e-02, 0.0000e+00, 0.0000e+00, 3.9250e-01, 0.0000e+00,
        0.0000e+00, 6.7120e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        3.1144e-02, 0.0000e+00, 1.2448e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 3.5588e-01, 1.0555e-01, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 7.5631e-01, 9.8547e-02, 0.0000e+00, 8.0576e-01, 0.0000e+00,
        0.0000e+00, 1.1600e-01, 4.9698e-01, 0.0000e+00, 5.2271e-01, 2.7615e-03,
        9.4442e-01, 1.1841e+00, 9.7854e-01, 0.0000e+00, 0.0000e+00, 5.1275e-03,
        7.6443e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.0757e-02,
        0.0000e+00, 1.7050e-01, 0.0000e+00, 0.0000e+00, 1.9776e+00, 0.0000e+00,
        0.0000e+00, 4.3078e-01, 1.3662e-03, 2.7815e-01, 1.4483e-02, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 4.8380e-01, 1.7024e-01, 4.5755e-01, 0.0000e+00,
        0.0000e+00, 1.7847e-01, 0.0000e+00, 0.0000e+00, 2.7351e-01, 0.0000e+00,
        9.2228e-02, 0.0000e+00, 0.0000e+00, 4.2485e-02, 0.0000e+00, 0.0000e+00,
        8.4339e-02, 3.4777e-02, 0.0000e+00, 6.3109e-01, 0.0000e+00, 7.9560e-02,
        0.0000e+00, 0.0000e+00, 1.0643e+00, 1.0276e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 8.2296e-01, 0.0000e+00, 0.0000e+00, 4.1879e-01, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.4142e-01, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 3.2165e-01, 0.0000e+00, 1.6740e+00, 4.1892e-01,
        0.0000e+00, 5.9862e-02, 0.0000e+00, 2.2916e-01, 1.6646e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        5.8084e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 8.9608e-02, 0.0000e+00,
        2.0563e-01, 4.3237e-01, 1.8932e-02, 0.0000e+00, 2.1425e-01, 0.0000e+00,
        0.0000e+00, 5.3636e-03, 0.0000e+00, 1.3658e-01, 6.1784e-01, 1.1423e+00,
        0.0000e+00, 7.0957e-01, 0.0000e+00, 4.3167e-02, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.1183e+00,
        3.0325e-01, 6.9370e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 1.0420e-01, 0.0000e+00, 1.4127e-02, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 3.4020e-02, 0.0000e+00, 1.0312e-02, 0.0000e+00,
        0.0000e+00, 9.2421e-03, 0.0000e+00, 0.0000e+00, 3.8159e-01, 2.4580e-02,
        0.0000e+00, 3.1692e-02, 0.0000e+00, 0.0000e+00, 1.3920e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        1.9912e-02, 2.6645e-01, 1.5516e-01, 9.0504e-02, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.9092e+00, 0.0000e+00, 7.3789e-01, 1.4766e-01,
        1.0720e-01, 1.0810e+00, 0.0000e+00, 6.5901e-02, 3.2988e-01, 1.4267e+00,
        8.7151e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 4.9165e-01, 0.0000e+00, 1.7515e-02, 0.0000e+00, 1.4909e-03,
        3.7605e-02, 0.0000e+00, 6.2660e-01, 2.9753e-02, 9.5189e-02, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 4.7695e-01, 0.0000e+00, 8.6302e-01, 1.7904e-01,
        3.8087e-02, 0.0000e+00, 1.4541e+00, 1.8798e-01, 0.0000e+00, 1.9524e+00,
        2.7424e-01, 0.0000e+00, 0.0000e+00, 1.5909e-02, 0.0000e+00, 1.8601e-01,
        1.1716e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.7119e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.5524e-01, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 3.6243e-01, 0.0000e+00, 0.0000e+00, 3.9999e-02,
        0.0000e+00, 5.4131e-01, 0.0000e+00, 1.7517e-01, 5.1740e-02, 0.0000e+00,
        8.5495e-02, 3.1573e-01, 5.9779e-02, 4.5309e-01, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 6.1648e-02, 0.0000e+00, 0.0000e+00,
        1.1528e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.0433e-01, 0.0000e+00,
        1.2305e-01, 6.8563e-01, 3.2448e-02, 1.3039e-02, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 3.5287e+00, 0.0000e+00, 5.5917e-02, 0.0000e+00, 4.5269e-03,
        0.0000e+00, 3.6477e-01, 1.0412e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        5.6592e-01, 0.0000e+00, 3.9296e-01, 1.0252e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 2.1996e-01, 5.7762e-01, 0.0000e+00, 7.7804e-03, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 6.1511e-03, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 6.5018e-01, 0.0000e+00, 3.4336e-02, 2.7431e-03,
        0.0000e+00, 1.6226e-01, 2.1774e-02, 0.0000e+00, 2.6306e-01, 0.0000e+00,
        1.1740e-01, 0.0000e+00, 1.0492e-02, 1.7710e-02, 1.0235e-01, 0.0000e+00,
        2.8432e-02, 3.8606e-02, 3.2899e-01, 0.0000e+00, 4.3756e-03, 0.0000e+00,
        1.3035e+00, 0.0000e+00, 0.0000e+00, 3.4193e-01, 1.3212e-01, 3.1403e-02,
        1.0386e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        1.1366e+00, 6.3642e-02, 1.0887e+00, 0.0000e+00, 9.2471e-02, 9.8993e-02,
        0.0000e+00, 6.6828e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.7455e-01,
        9.5480e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 3.1190e-02, 0.0000e+00, 0.0000e+00, 3.5831e-01, 1.5872e-01,
        0.0000e+00, 1.2779e-01, 3.0146e-04, 0.0000e+00, 1.2346e-02, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0146e-02, 1.1744e+00, 5.7297e-01,
        0.0000e+00, 0.0000e+00, 7.8838e-01, 0.0000e+00, 0.0000e+00, 1.1847e-01,
        0.0000e+00, 0.0000e+00], dtype=torch.float64, requires_grad=True)
(Pdb) torch.Size([141, 512])
(Pdb) Epoch 0:   0%|          | 0/534 [01:26<?, ?it/s]
Traceback (most recent call last):
  File "train.py", line 78, in <module>
    main(args)
  File "train.py", line 59, in main
    trainer.fit(model, dm)
  File "/Users/emilecarron/opt/anaconda3/envs/thesis/lib/python3.6/site-packages/pytorch_lightning/trainer/trainer.py", line 499, in fit
    self.dispatch()
  File "/Users/emilecarron/opt/anaconda3/envs/thesis/lib/python3.6/site-packages/pytorch_lightning/trainer/trainer.py", line 546, in dispatch
    self.accelerator.start_training(self)
  File "/Users/emilecarron/opt/anaconda3/envs/thesis/lib/python3.6/site-packages/pytorch_lightning/accelerators/accelerator.py", line 73, in start_training
    self.training_type_plugin.start_training(trainer)
  File "/Users/emilecarron/opt/anaconda3/envs/thesis/lib/python3.6/site-packages/pytorch_lightning/plugins/training_type/training_type_plugin.py", line 114, in start_training
    self._results = trainer.run_train()
  File "/Users/emilecarron/opt/anaconda3/envs/thesis/lib/python3.6/site-packages/pytorch_lightning/trainer/trainer.py", line 637, in run_train
    self.train_loop.run_training_epoch()
  File "/Users/emilecarron/opt/anaconda3/envs/thesis/lib/python3.6/site-packages/pytorch_lightning/trainer/training_loop.py", line 492, in run_training_epoch
    batch_output = self.run_training_batch(batch, batch_idx, dataloader_idx)
  File "/Users/emilecarron/opt/anaconda3/envs/thesis/lib/python3.6/site-packages/pytorch_lightning/trainer/training_loop.py", line 654, in run_training_batch
    self.optimizer_step(optimizer, opt_idx, batch_idx, train_step_and_backward_closure)
  File "/Users/emilecarron/opt/anaconda3/envs/thesis/lib/python3.6/site-packages/pytorch_lightning/trainer/training_loop.py", line 433, in optimizer_step
    using_lbfgs=is_lbfgs,
  File "/Users/emilecarron/opt/anaconda3/envs/thesis/lib/python3.6/site-packages/pytorch_lightning/core/lightning.py", line 1390, in optimizer_step
    optimizer.step(closure=optimizer_closure)
  File "/Users/emilecarron/opt/anaconda3/envs/thesis/lib/python3.6/site-packages/pytorch_lightning/core/optimizer.py", line 214, in step
    self.__optimizer_step(*args, closure=closure, profiler_name=profiler_name, **kwargs)
  File "/Users/emilecarron/opt/anaconda3/envs/thesis/lib/python3.6/site-packages/pytorch_lightning/core/optimizer.py", line 134, in __optimizer_step
    trainer.accelerator.optimizer_step(optimizer, self._optimizer_idx, lambda_closure=closure, **kwargs)
  File "/Users/emilecarron/opt/anaconda3/envs/thesis/lib/python3.6/site-packages/pytorch_lightning/accelerators/accelerator.py", line 277, in optimizer_step
    self.run_optimizer_step(optimizer, opt_idx, lambda_closure, **kwargs)
  File "/Users/emilecarron/opt/anaconda3/envs/thesis/lib/python3.6/site-packages/pytorch_lightning/accelerators/accelerator.py", line 282, in run_optimizer_step
    self.training_type_plugin.optimizer_step(optimizer, lambda_closure=lambda_closure, **kwargs)
  File "/Users/emilecarron/opt/anaconda3/envs/thesis/lib/python3.6/site-packages/pytorch_lightning/plugins/training_type/training_type_plugin.py", line 163, in optimizer_step
    optimizer.step(closure=lambda_closure, **kwargs)
  File "/Users/emilecarron/opt/anaconda3/envs/thesis/lib/python3.6/site-packages/torch/optim/optimizer.py", line 89, in wrapper
    return func(*args, **kwargs)
  File "/Users/emilecarron/opt/anaconda3/envs/thesis/lib/python3.6/site-packages/torch/autograd/grad_mode.py", line 27, in decorate_context
    return func(*args, **kwargs)
  File "/Users/emilecarron/opt/anaconda3/envs/thesis/lib/python3.6/site-packages/torch/optim/adam.py", line 66, in step
    loss = closure()
  File "/Users/emilecarron/opt/anaconda3/envs/thesis/lib/python3.6/site-packages/pytorch_lightning/trainer/training_loop.py", line 649, in train_step_and_backward_closure
    split_batch, batch_idx, opt_idx, optimizer, self.trainer.hiddens
  File "/Users/emilecarron/opt/anaconda3/envs/thesis/lib/python3.6/site-packages/pytorch_lightning/trainer/training_loop.py", line 742, in training_step_and_backward
    result = self.training_step(split_batch, batch_idx, opt_idx, hiddens)
  File "/Users/emilecarron/opt/anaconda3/envs/thesis/lib/python3.6/site-packages/pytorch_lightning/trainer/training_loop.py", line 293, in training_step
    training_step_output = self.trainer.accelerator.training_step(args)
  File "/Users/emilecarron/opt/anaconda3/envs/thesis/lib/python3.6/site-packages/pytorch_lightning/accelerators/accelerator.py", line 156, in training_step
    return self.training_type_plugin.training_step(*args)
  File "/Users/emilecarron/opt/anaconda3/envs/thesis/lib/python3.6/site-packages/pytorch_lightning/plugins/training_type/training_type_plugin.py", line 125, in training_step
    return self.lightning_module.training_step(*args, **kwargs)
  File "/Users/emilecarron/projects/thesis/detectie/retinanet.py", line 202, in training_step
    for idx in boxes:
  File "/Users/emilecarron/projects/thesis/detectie/retinanet.py", line 202, in training_step
    for idx in boxes:
  File "/Users/emilecarron/opt/anaconda3/envs/thesis/lib/python3.6/bdb.py", line 51, in trace_dispatch
    return self.dispatch_line(frame)
  File "/Users/emilecarron/opt/anaconda3/envs/thesis/lib/python3.6/bdb.py", line 70, in dispatch_line
    if self.quitting: raise BdbQuit
bdb.BdbQuit
