GPU available: False, used: False
TPU available: False, using: 0 TPU cores

  | Name             | Type             | Params
------------------------------------------------------
0 | anchor_generator | AnchorGenerator  | 0     
1 | backbone         | BackboneWithFPN  | 14.3 M
2 | model            | RetinaNet        | 23.2 M
3 | bbone            | ResNet           | 11.7 M
4 | extractor        | Sequential       | 11.2 M
5 | teacher_model    | RecognitionModel | 11.3 M
6 | tm               | Sequential       | 11.2 M
------------------------------------------------------
46.2 M    Trainable params
0         Non-trainable params
46.2 M    Total params
184.650   Total estimated model params size (MB)
/Users/emilecarron/opt/anaconda3/envs/thesis/lib/python3.6/site-packages/pytorch_lightning/utilities/distributed.py:68: UserWarning: The dataloader, val dataloader 0, does not have many workers which may be a bottleneck. Consider increasing the value of the `num_workers` argument` (try 4 which is the number of cpus on this machine) in the `DataLoader` init to improve performance.
  warnings.warn(*args, **kwargs)
Validation sanity check: 0it [00:00, ?it/s]Validation sanity check:   0%|          | 0/2 [00:00<?, ?it/s]/Users/emilecarron/dataset/SKU110K/images/val_169.jpg
Validation sanity check:  50%|█████     | 1/2 [00:10<00:10, 10.27s/it]/Users/emilecarron/dataset/SKU110K/images/val_33.jpg
Validation sanity check: 100%|██████████| 2/2 [00:20<00:00, 10.36s/it]/Users/emilecarron/dataset/SKU110K/images/val_280.jpg
                                                                      /Users/emilecarron/opt/anaconda3/envs/thesis/lib/python3.6/site-packages/pytorch_lightning/utilities/distributed.py:68: UserWarning: The dataloader, train dataloader, does not have many workers which may be a bottleneck. Consider increasing the value of the `num_workers` argument` (try 4 which is the number of cpus on this machine) in the `DataLoader` init to improve performance.
  warnings.warn(*args, **kwargs)
Training: 0it [00:00, ?it/s]Training:   0%|          | 0/534 [00:00<?, ?it/s]Epoch 0:   0%|          | 0/534 [00:00<?, ?it/s] /Users/emilecarron/dataset/SKU110K/images/train_0.jpg
/Users/emilecarron/dataset/SKU110K/images/train_1.jpg
> /Users/emilecarron/projects/thesis/detectie/retinanet.py(194)training_step()
-> x, y = batch
(Pdb) > /Users/emilecarron/projects/thesis/detectie/retinanet.py(195)training_step()
-> y = [{'boxes': b, 'labels': l, 'embedding': e}
(Pdb) > /Users/emilecarron/projects/thesis/detectie/retinanet.py(196)training_step()
-> for b, l, e in zip(y['boxes'],y['labels'], y['embedding'])
(Pdb) > /Users/emilecarron/projects/thesis/detectie/retinanet.py(199)training_step()
-> boxes = y[0]['boxes'].int()
(Pdb) > /Users/emilecarron/projects/thesis/detectie/retinanet.py(200)training_step()
-> counter = 0
(Pdb) > /Users/emilecarron/projects/thesis/detectie/retinanet.py(201)training_step()
-> for idx in boxes:
(Pdb) > /Users/emilecarron/projects/thesis/detectie/retinanet.py(202)training_step()
-> height = idx[3]-idx[1]
(Pdb) > /Users/emilecarron/projects/thesis/detectie/retinanet.py(203)training_step()
-> width = idx[2]-idx[0]
(Pdb) > /Users/emilecarron/projects/thesis/detectie/retinanet.py(204)training_step()
-> if height < 7:
(Pdb) > /Users/emilecarron/projects/thesis/detectie/retinanet.py(207)training_step()
-> if width < 7:
(Pdb) > /Users/emilecarron/projects/thesis/detectie/retinanet.py(211)training_step()
-> image = torchvision.transforms.functional.crop(x, idx[1], idx[0], height, width)
(Pdb) > /Users/emilecarron/projects/thesis/detectie/retinanet.py(212)training_step()
-> self.tm.eval()
(Pdb) > /Users/emilecarron/projects/thesis/detectie/retinanet.py(213)training_step()
-> predictions = torch.squeeze(self.tm(image))
(Pdb) tensor([[[[0.0314, 0.0353, 0.2784,  ..., 0.1020, 0.1020, 0.0863],
          [0.1608, 0.5333, 0.6353,  ..., 0.0431, 0.0941, 0.0941],
          [0.3451, 0.5647, 0.5098,  ..., 0.0549, 0.0353, 0.0431],
          ...,
          [0.9608, 0.5373, 0.3961,  ..., 0.8784, 0.8353, 0.6196],
          [0.6431, 0.9412, 0.3843,  ..., 0.5961, 0.5961, 0.6784],
          [0.5725, 0.9098, 0.5608,  ..., 0.7020, 0.5882, 0.6196]],

         [[0.0667, 0.0627, 0.3098,  ..., 0.1569, 0.1412, 0.1255],
          [0.2000, 0.5686, 0.6706,  ..., 0.1020, 0.1373, 0.1373],
          [0.3725, 0.6000, 0.5451,  ..., 0.1255, 0.0980, 0.1059],
          ...,
          [0.9569, 0.5529, 0.4157,  ..., 0.8392, 0.7882, 0.5608],
          [0.6431, 0.9451, 0.4000,  ..., 0.5529, 0.5373, 0.6157],
          [0.5647, 0.9020, 0.5647,  ..., 0.6706, 0.5529, 0.5765]],

         [[0.1020, 0.1020, 0.3529,  ..., 0.1882, 0.1765, 0.1608],
          [0.2275, 0.6078, 0.7098,  ..., 0.1294, 0.1686, 0.1686],
          [0.4157, 0.6510, 0.5961,  ..., 0.1412, 0.1255, 0.1333],
          ...,
          [0.9843, 0.5765, 0.4353,  ..., 0.8196, 0.7569, 0.5137],
          [0.6667, 0.9529, 0.4118,  ..., 0.5255, 0.5020, 0.5608],
          [0.5882, 0.8980, 0.5686,  ..., 0.6588, 0.5373, 0.5412]]]])
(Pdb) > /Users/emilecarron/projects/thesis/detectie/retinanet.py(214)training_step()
-> embedding_path = self.data_dir + '/SKU110K/annotations/embeddings/embedding' + str(counter)+'.pt'
(Pdb) tensor([0.0000e+00, 0.0000e+00, 5.5505e-01, 0.0000e+00, 2.8925e-03, 0.0000e+00,
        0.0000e+00, 4.3957e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 1.6053e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 4.1350e-02, 1.3379e-01, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 4.0834e-01, 0.0000e+00, 3.0700e-01, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 1.2118e-01, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 1.2452e-01, 0.0000e+00, 0.0000e+00, 1.7244e+00, 0.0000e+00,
        4.6878e-01, 1.4898e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 8.9106e-01, 1.4209e-02, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.8064e-02, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 1.3629e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 4.0041e-01, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 1.7779e-02, 0.0000e+00, 1.1205e-02, 3.2066e-01, 0.0000e+00,
        0.0000e+00, 8.2650e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        1.2453e-02, 0.0000e+00, 5.3897e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 7.1419e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 4.8919e-01, 2.6214e-01, 4.0660e-01, 2.0659e-02,
        0.0000e+00, 1.2227e+00, 4.9733e-02, 0.0000e+00, 1.0389e+00, 0.0000e+00,
        0.0000e+00, 2.7470e-02, 4.0800e-01, 0.0000e+00, 2.6257e-01, 5.8762e-03,
        1.1258e+00, 9.6240e-01, 5.9520e-01, 0.0000e+00, 0.0000e+00, 2.6180e-01,
        6.9289e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.1440e-01, 0.0000e+00,
        0.0000e+00, 2.3524e-01, 0.0000e+00, 0.0000e+00, 1.1755e+00, 0.0000e+00,
        0.0000e+00, 4.2110e-01, 0.0000e+00, 8.4011e-03, 3.7491e-02, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 8.2006e-02, 9.0230e-03, 3.5275e-01, 0.0000e+00,
        0.0000e+00, 3.0722e-01, 0.0000e+00, 0.0000e+00, 1.7540e-02, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        7.9708e-02, 3.4553e-02, 0.0000e+00, 4.5005e-01, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.2551e+00, 6.6434e-01, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 2.7957e-01, 0.0000e+00, 0.0000e+00, 1.1839e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 8.4467e-01, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.1020e-01, 0.0000e+00, 7.5950e-01, 4.7324e-01,
        0.0000e+00, 6.0821e-01, 0.0000e+00, 9.9119e-02, 1.3671e+00, 3.6574e-01,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        8.5272e-02, 0.0000e+00, 1.1434e-01, 0.0000e+00, 3.6846e-02, 0.0000e+00,
        5.2214e-01, 4.8448e-01, 0.0000e+00, 0.0000e+00, 2.9424e-01, 0.0000e+00,
        0.0000e+00, 1.6188e-01, 0.0000e+00, 1.9775e-01, 4.1976e-02, 1.0263e+00,
        0.0000e+00, 1.6114e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.4762e-01, 1.5562e+00,
        4.6043e-01, 6.3598e-02, 1.7410e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 8.4177e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 9.1079e-03, 0.0000e+00, 0.0000e+00, 4.5917e-01, 0.0000e+00,
        0.0000e+00, 4.5530e-01, 0.0000e+00, 0.0000e+00, 1.6695e+00, 0.0000e+00,
        3.3918e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 3.0501e-01, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.9617e+00, 0.0000e+00, 1.6114e+00, 1.5563e-03,
        7.8572e-02, 1.4339e+00, 0.0000e+00, 8.1183e-02, 2.4260e-01, 4.9291e-01,
        1.4630e+00, 0.0000e+00, 1.0226e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 1.7826e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        2.1178e-01, 0.0000e+00, 7.0378e-01, 0.0000e+00, 7.3577e-02, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.3092e+00, 5.7410e-01, 5.5221e-01, 5.1194e-01,
        0.0000e+00, 3.0760e-02, 1.0930e+00, 8.3787e-02, 3.9578e-02, 1.5111e+00,
        1.1013e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.6628e-01,
        9.6131e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.4864e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 8.7416e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 8.6486e-01, 0.0000e+00, 1.6133e-02, 2.1500e-01, 0.0000e+00,
        1.8983e-02, 5.0951e-01, 0.0000e+00, 5.9240e-02, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 6.3657e-01, 0.0000e+00, 0.0000e+00,
        1.9616e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.1155e-01, 0.0000e+00,
        2.1520e-01, 8.7176e-01, 0.0000e+00, 7.7425e-02, 0.0000e+00, 1.1581e-02,
        0.0000e+00, 4.0484e+00, 0.0000e+00, 3.0090e-01, 0.0000e+00, 4.4022e-01,
        0.0000e+00, 4.3959e-02, 1.0535e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        2.6753e-01, 0.0000e+00, 0.0000e+00, 1.5122e+00, 0.0000e+00, 0.0000e+00,
        1.6638e-01, 4.2360e-02, 6.3915e-01, 0.0000e+00, 2.6407e-02, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.6731e-03, 0.0000e+00, 1.2973e-02, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 6.2987e-02, 3.3373e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 3.9613e-02, 0.0000e+00, 0.0000e+00,
        1.1648e-01, 3.7808e-01, 2.8097e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        1.4615e+00, 0.0000e+00, 0.0000e+00, 5.3507e-01, 5.3140e-02, 0.0000e+00,
        7.8899e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 5.7132e-02, 2.2802e-02,
        1.3587e+00, 1.4345e-01, 7.9338e-01, 0.0000e+00, 1.0047e-01, 3.5066e-01,
        0.0000e+00, 1.8329e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.6441e-01,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 1.6620e-01, 0.0000e+00, 0.0000e+00, 4.0557e-01, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 2.0998e-02, 0.0000e+00, 6.9412e-02, 6.6381e-01, 1.0253e+00,
        0.0000e+00, 0.0000e+00, 3.5796e-01, 0.0000e+00, 0.0000e+00, 4.5039e-02,
        0.0000e+00, 0.0000e+00], grad_fn=<SqueezeBackward0>)
(Pdb) Epoch 0:   0%|          | 0/534 [00:56<?, ?it/s]
Traceback (most recent call last):
  File "train.py", line 78, in <module>
    main(args)
  File "train.py", line 59, in main
    trainer.fit(model, dm)
  File "/Users/emilecarron/opt/anaconda3/envs/thesis/lib/python3.6/site-packages/pytorch_lightning/trainer/trainer.py", line 499, in fit
    self.dispatch()
  File "/Users/emilecarron/opt/anaconda3/envs/thesis/lib/python3.6/site-packages/pytorch_lightning/trainer/trainer.py", line 546, in dispatch
    self.accelerator.start_training(self)
  File "/Users/emilecarron/opt/anaconda3/envs/thesis/lib/python3.6/site-packages/pytorch_lightning/accelerators/accelerator.py", line 73, in start_training
    self.training_type_plugin.start_training(trainer)
  File "/Users/emilecarron/opt/anaconda3/envs/thesis/lib/python3.6/site-packages/pytorch_lightning/plugins/training_type/training_type_plugin.py", line 114, in start_training
    self._results = trainer.run_train()
  File "/Users/emilecarron/opt/anaconda3/envs/thesis/lib/python3.6/site-packages/pytorch_lightning/trainer/trainer.py", line 637, in run_train
    self.train_loop.run_training_epoch()
  File "/Users/emilecarron/opt/anaconda3/envs/thesis/lib/python3.6/site-packages/pytorch_lightning/trainer/training_loop.py", line 492, in run_training_epoch
    batch_output = self.run_training_batch(batch, batch_idx, dataloader_idx)
  File "/Users/emilecarron/opt/anaconda3/envs/thesis/lib/python3.6/site-packages/pytorch_lightning/trainer/training_loop.py", line 654, in run_training_batch
    self.optimizer_step(optimizer, opt_idx, batch_idx, train_step_and_backward_closure)
  File "/Users/emilecarron/opt/anaconda3/envs/thesis/lib/python3.6/site-packages/pytorch_lightning/trainer/training_loop.py", line 433, in optimizer_step
    using_lbfgs=is_lbfgs,
  File "/Users/emilecarron/opt/anaconda3/envs/thesis/lib/python3.6/site-packages/pytorch_lightning/core/lightning.py", line 1390, in optimizer_step
    optimizer.step(closure=optimizer_closure)
  File "/Users/emilecarron/opt/anaconda3/envs/thesis/lib/python3.6/site-packages/pytorch_lightning/core/optimizer.py", line 214, in step
    self.__optimizer_step(*args, closure=closure, profiler_name=profiler_name, **kwargs)
  File "/Users/emilecarron/opt/anaconda3/envs/thesis/lib/python3.6/site-packages/pytorch_lightning/core/optimizer.py", line 134, in __optimizer_step
    trainer.accelerator.optimizer_step(optimizer, self._optimizer_idx, lambda_closure=closure, **kwargs)
  File "/Users/emilecarron/opt/anaconda3/envs/thesis/lib/python3.6/site-packages/pytorch_lightning/accelerators/accelerator.py", line 277, in optimizer_step
    self.run_optimizer_step(optimizer, opt_idx, lambda_closure, **kwargs)
  File "/Users/emilecarron/opt/anaconda3/envs/thesis/lib/python3.6/site-packages/pytorch_lightning/accelerators/accelerator.py", line 282, in run_optimizer_step
    self.training_type_plugin.optimizer_step(optimizer, lambda_closure=lambda_closure, **kwargs)
  File "/Users/emilecarron/opt/anaconda3/envs/thesis/lib/python3.6/site-packages/pytorch_lightning/plugins/training_type/training_type_plugin.py", line 163, in optimizer_step
    optimizer.step(closure=lambda_closure, **kwargs)
  File "/Users/emilecarron/opt/anaconda3/envs/thesis/lib/python3.6/site-packages/torch/optim/optimizer.py", line 89, in wrapper
    return func(*args, **kwargs)
  File "/Users/emilecarron/opt/anaconda3/envs/thesis/lib/python3.6/site-packages/torch/autograd/grad_mode.py", line 27, in decorate_context
    return func(*args, **kwargs)
  File "/Users/emilecarron/opt/anaconda3/envs/thesis/lib/python3.6/site-packages/torch/optim/adam.py", line 66, in step
    loss = closure()
  File "/Users/emilecarron/opt/anaconda3/envs/thesis/lib/python3.6/site-packages/pytorch_lightning/trainer/training_loop.py", line 649, in train_step_and_backward_closure
    split_batch, batch_idx, opt_idx, optimizer, self.trainer.hiddens
  File "/Users/emilecarron/opt/anaconda3/envs/thesis/lib/python3.6/site-packages/pytorch_lightning/trainer/training_loop.py", line 742, in training_step_and_backward
    result = self.training_step(split_batch, batch_idx, opt_idx, hiddens)
  File "/Users/emilecarron/opt/anaconda3/envs/thesis/lib/python3.6/site-packages/pytorch_lightning/trainer/training_loop.py", line 293, in training_step
    training_step_output = self.trainer.accelerator.training_step(args)
  File "/Users/emilecarron/opt/anaconda3/envs/thesis/lib/python3.6/site-packages/pytorch_lightning/accelerators/accelerator.py", line 156, in training_step
    return self.training_type_plugin.training_step(*args)
  File "/Users/emilecarron/opt/anaconda3/envs/thesis/lib/python3.6/site-packages/pytorch_lightning/plugins/training_type/training_type_plugin.py", line 125, in training_step
    return self.lightning_module.training_step(*args, **kwargs)
  File "/Users/emilecarron/projects/thesis/detectie/retinanet.py", line 214, in training_step
    embedding_path = self.data_dir + '/SKU110K/annotations/embeddings/embedding' + str(counter)+'.pt'
  File "/Users/emilecarron/projects/thesis/detectie/retinanet.py", line 214, in training_step
    embedding_path = self.data_dir + '/SKU110K/annotations/embeddings/embedding' + str(counter)+'.pt'
  File "/Users/emilecarron/opt/anaconda3/envs/thesis/lib/python3.6/bdb.py", line 51, in trace_dispatch
    return self.dispatch_line(frame)
  File "/Users/emilecarron/opt/anaconda3/envs/thesis/lib/python3.6/bdb.py", line 70, in dispatch_line
    if self.quitting: raise BdbQuit
bdb.BdbQuit
